`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/08/08 11:33:26
// Design Name: 
// Module Name: mul_lut
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

//8bit,8bit operation

(* use_dsp = "no"*) module mul_lut(
    input clk,
    input[7:0] in_1,
    input[7:0] in_2,
    input[7:0] in_3,
    output[15:0] out1,
    output[15:0] out2
    );
  
reg[15:0] out_temp1;
reg[15:0] out_temp2;
reg[2:0] clk_count=0;

always@(posedge clk) begin
        clk_count <= clk_count + 3'd1;
        if(clk_count == 3'd4) begin
        clk_count <= 3'd0;
        end
end

always@(*) begin
    if(clk_count == 3'd4) begin
        out_temp1 <= $signed(in_1) * $signed(in_3);
        out_temp2 <= $signed(in_2) * $signed(in_3);
    end
    else begin
        out_temp1 <= 0;
        out_temp2 <= 0;
    end
 end
 
 assign out1 = out_temp1;
 assign out2 = out_temp2;
endmodule
